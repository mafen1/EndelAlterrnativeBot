# ffmpeg_auto.py
import os
import sys

# –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã SSL
for key in ['SSL_CERT_FILE', 'REQUESTS_CA_BUNDLE', 'CURL_CA_BUNDLE']:
    os.environ.pop(key, None)

import requests
import zipfile
import io
from tqdm import tqdm

FFMPEG_DIR = os.path.join(os.path.dirname(__file__), "ffmpeg")
FFMPEG_BIN = os.path.join(FFMPEG_DIR, "bin", "ffmpeg.exe")


def ensure_ffmpeg():
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç ffmpeg, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."""
    if os.path.exists(FFMPEG_BIN):
        print("‚úÖ ffmpeg —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        return FFMPEG_BIN

    print("üì¶ ffmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∫–∞—á–∏–≤–∞—é (—Ä–∞–∑–º–µ—Ä ~70 –ú–ë)...")
    # --- –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã –≤ –∫–æ–Ω—Ü–µ URL ---
    url = "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip"
    # --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---

    try:
        response = requests.get(url, stream=True)
        response.raise_for_status()

        total_size = int(response.headers.get('content-length', 0))
        zip_buffer = io.BytesIO()

        with tqdm(total=total_size, unit='B', unit_scale=True, desc="–°–∫–∞—á–∏–≤–∞–Ω–∏–µ") as pbar:
            for chunk in response.iter_content(chunk_size=8192):
                if chunk:  # –ó–∞—â–∏—Ç–∞ –æ—Ç –ø—É—Å—Ç—ã—Ö —á–∞–Ω–∫–æ–≤
                    zip_buffer.write(chunk)
                    pbar.update(len(chunk))

        print("–†–∞—Å–ø–∞–∫–æ–≤–∫–∞...")
        zip_buffer.seek(0)

        with zipfile.ZipFile(zip_buffer) as zf:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –∞—Ä—Ö–∏–≤–µ
            namelist = zf.namelist()
            if not namelist:
                raise ValueError("–ê—Ä—Ö–∏–≤ –ø—É—Å—Ç")

            root_dir = namelist[0].split('/')[0]
            bin_path = f"{root_dir}/bin/ffmpeg.exe"

            if bin_path not in namelist:
                raise FileNotFoundError(f"–§–∞–π–ª {bin_path} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ")

            # –°–æ–∑–¥–∞—ë–º —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            os.makedirs(FFMPEG_DIR, exist_ok=True)

            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–π —Ñ–∞–π–ª (–∏ –µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –ø–∞–ø–∫–∏)
            zf.extract(bin_path, FFMPEG_DIR)

            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º bin –≤ –∫–æ—Ä–µ–Ω—å FFMPEG_DIR
            extracted_bin_dir = os.path.join(FFMPEG_DIR, root_dir, "bin")
            target_bin_dir = os.path.join(FFMPEG_DIR, "bin")

            if os.path.exists(target_bin_dir):
                import shutil
                shutil.rmtree(target_bin_dir)

            os.rename(extracted_bin_dir, target_bin_dir)

            # –£–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–≤—à—É—é—Å—è –ø–∞–ø–∫—É root_dir
            root_full_path = os.path.join(FFMPEG_DIR, root_dir)
            if os.path.exists(root_full_path) and os.path.isdir(root_full_path):
                import shutil
                shutil.rmtree(root_full_path)

        print("‚úÖ ffmpeg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ ./ffmpeg/")
        return FFMPEG_BIN

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ ffmpeg: {e}")
        sys.exit(1)